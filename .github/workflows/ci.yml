name: CI

on:
  push:
    branches: [ master, main, v0.2.13 ]
  pull_request:
    branches: [ master, main, v0.2.13 ]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23.x"
          cache: "npm"
          cache-dependency-path: crates/deepresearch-gui/web/package-lock.json

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install GUI dependencies
        working-directory: crates/deepresearch-gui/web
        run: npm ci

      - name: Build GUI assets
        working-directory: crates/deepresearch-gui/web
        run: npm run build

      - name: Format
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: Unit & integration tests
        run: cargo test --workspace --all-targets -- --nocapture

      - name: Snapshot regression guard
        run: cargo test --offline -p deepresearch-core finalize_summary_snapshot -- --nocapture

      - name: CLI bench latency check
        env:
          CARGO_TERM_COLOR: always
          RUST_LOG: warn
        run: |
          cargo run --offline -p deepresearch-cli bench "CI bench" --sessions 8 --concurrency 4 --format json > bench.json
          cat bench.json
          AVG=$(jq '.avg_latency_ms // 0' bench.json)
          P95=$(jq '.p95_latency_ms // 0' bench.json)
          FAIL=$(jq '.failure_count // 0' bench.json)
          echo "Average latency: $AVG ms"
          echo "P95 latency: $P95 ms"
          echo "Failure count: $FAIL"
          if (( $(echo "$AVG > 350" | bc -l) )); then
            echo "Average latency exceeds 350 ms" >&2; exit 1; fi
          if (( $(echo "$P95 > 400" | bc -l) )); then
            echo "P95 latency exceeds 400 ms" >&2; exit 1; fi
          if [ "$FAIL" -ne 0 ]; then
            echo "Benchmark recorded failures" >&2; exit 1; fi

      - name: API health smoke
        run: |
          cargo run --offline -p deepresearch-api &
          SERVER_PID=$!
          sleep 2
          curl -s http://127.0.0.1:8080/health | jq .
          curl -s http://127.0.0.1:8080/query \
            -H 'content-type: application/json' \
            -d '{"query":"CI API smoke","explain":false}' | jq .summary
          kill $SERVER_PID

      - name: GUI stream smoke
        run: cargo test --offline -p deepresearch-gui --test http -- --nocapture

  sandbox:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registries
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-sandbox-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build sandbox image
        run: docker build -t deepresearch-python-sandbox:ci -f containers/python-sandbox/Dockerfile .

      - name: Run sandbox smoke tests
        env:
          DEEPRESEARCH_SANDBOX_TESTS: "1"
          DEEPRESEARCH_SANDBOX_IMAGE: "deepresearch-python-sandbox:ci"
        run: cargo test -p deepresearch-core --test sandbox -- --ignored --nocapture

      - name: Integration sandbox test
        env:
          DEEPRESEARCH_SANDBOX_TESTS: "1"
          DEEPRESEARCH_SANDBOX_IMAGE: "deepresearch-python-sandbox:ci"
        run: cargo test -p deepresearch-core --test integration_sandbox -- --ignored --nocapture
